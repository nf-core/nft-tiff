{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"nft-tiff","text":"<p>An nf-test plugin to test nft-tiff files</p>"},{"location":"#start-using-the-plugin","title":"Start using the plugin","text":"<p>To start using the plugin please add it to your <code>nf-test.config</code> file:</p> nf-test.config<pre><code>config {\n    plugins {\n        load \"nft-tiff@0.1.0\"\n    }\n}\n</code></pre>"},{"location":"#use-a-development-version","title":"Use a development version","text":"<p>To use the development version, please do the following steps:</p> <ul> <li>Clone the nft-tiff repository</li> </ul> HTTPSSSH <pre><code>git clone https://github.com/nf-core/nft-tiff.git\n</code></pre> <pre><code>git clone git@github.com:nf-core/nft-tiff.git\n</code></pre> <ul> <li>Run the build script</li> </ul> <pre><code>./build.sh\n</code></pre> <ul> <li>Add the jar location (visible at the end of the build script output) to the <code>nf-test.config</code> file</li> </ul> nf-test.config<pre><code>config {\n    plugins {\n        loadFromFile \"full/path/to/the/plugin/jar\"\n    }\n}\n</code></pre> <ul> <li>Or add the plugin jar to an nf-test command:</li> </ul> Terminal<pre><code>nf-test test --plugins full/path/to/the/plugin/jar\n</code></pre> <p>Note</p> <p>The plugin jar will always be located in the <code>target/</code> directory in the root of the plugin repository</p>"},{"location":"usage/","title":"Metadata","text":""},{"location":"usage/#full-metadata-comparison","title":"Full metadata comparison","text":"<p>Metadata can be directly compared using:</p> <pre><code>def tiff      = path('image.tiff').tiff\ndef reference = path('reference.tiff').tiff\n\nassert tiff.meta == reference.meta\n</code></pre> <p>This will check every metadata field in every directory of the TIFF files for equality. </p>"},{"location":"usage/#compare-dimensions","title":"Compare dimensions","text":"<p>The height and width of TIFF files can be compared using the <code>meta.getDimensions()</code> function:</p> <pre><code>def tiff      = path('image.tiff').tiff\ndef reference = path('reference.tiff').tiff\n\ndef dim          = tiff.meta.getDimensions()\ndef referenceDim = reference.meta.getDimensions()\n\nassert dim == referenceDim\n</code></pre>"},{"location":"usage/#check-for-field-counts","title":"Check for field counts","text":"<p>The number of metadata fields in each directory of a TIFF file can be checked using the <code>meta.getFieldCounts()</code> function:</p> <pre><code>def tiff = path('image.tiff').tiff\n\nassert tiff.meta.getFieldCounts()[0] == 10\n</code></pre> <p>Note that meta.getFieldCounts() returns a list, where each element corresponds to the directory at the same position.</p>"},{"location":"usage/#check-for-field-names","title":"Check for field names","text":"<p>The names of metadata fields in each directory of a TIFF file can be checked using the <code>meta.getFieldNames()</code> function:</p> <pre><code>def tiff      = path('image.tiff').tiff\ndef reference = path('reference.tiff').tiff\n\ndef fields          = tiff.meta.getFieldNames()\ndef referenceFields = reference.meta.getFieldNames()\n\nassert fields == referenceFields\nassert fields[0].contains('Compression')\n</code></pre> <p>Note that <code>meta.getFieldNames()</code> returns a list, where each element corresponds to the directory at the same position.</p>"},{"location":"usage/#check-individual-metadata-fields","title":"Check individual metadata fields","text":"<p>Individual (lists of) metadata fields in each directory of a TIFF file can be compared using the <code>meta.getFields()</code> function:</p> <p><pre><code>def tiff      = path('image.tiff').tiff\ndef reference = path('reference.tiff').tiff\n\ndef fields          = tiff.meta.getFields(['ImageWidth', 'PlanarConfiguration', 'Compression'])\ndef referenceFields = reference.meta.getFields(['ImageWidth', 'PlanarConfiguration', 'Compression'])\n\nassert fields == referenceFields\n</code></pre> Note that <code>meta.getFields()</code> returns a <code>List</code> of <code>Map</code>s.  Each index in the list corresponds to a directory in the TIFF file.  The maps assign the field name to the corresponding value.</p> <p>The function <code>meta.getFields()</code> also accepts a single field as a <code>String</code> and may be called without any parameters to compare every metadata field.</p>"},{"location":"usage/#bitmaps","title":"Bitmaps","text":""},{"location":"usage/#full-bitmap-comparison","title":"Full bitmap comparison","text":"<p>Bitmaps can be directly compared using:</p> <pre><code>def tiff      = path('image.tiff').tiff\ndef reference = path('reference.tiff').tiff\n\nassert tiff.bitmaps == reference.bitmaps\n</code></pre>"},{"location":"usage/#bitmap-comparison-with-tolerance","title":"Bitmap comparison with tolerance","text":"<p>A comparison of bitmaps, where a certain percentage of entries must be equal, can be performed using the <code>bitmaps.matchesWithTolerance()</code> function:</p> <pre><code>def tiff      = path('image.tiff').tiff\ndef reference = path('reference.tiff').tiff\n\nassert tiff.bitmaps.matchesWithTolerance(reference.bitmaps, 80)\n</code></pre> <p>In this example the TIFF files <code>image.tiff</code> and <code>reference.tiff</code> are compared and 80% of bitmap entries have to match.</p>"},{"location":"usage/#bitmap-comparison-with-checksums","title":"Bitmap comparison with checksums","text":"<p>The values of bitmaps can be compared using <code>md5</code> checksums using the <code>bitmaps.md5()</code> function:</p> <pre><code>def tiff      = path('image.tiff').tiff\ndef reference = path('reference.tiff').tiff\n\ndef md5Sum          = tiff.bitmaps.md5()\ndef referenceMd5Sum = reference.bitmaps.md5()\n\nassert md5Sum == referenceMd5Sum\n</code></pre> <p>This is particularly useful with snapshots:</p> <pre><code>def tiff = path('image.tiff').tiff\ndef md5  = tiff.bitmaps.md5()\n\nassert snapshot(md5).match()\n</code></pre>"}]}